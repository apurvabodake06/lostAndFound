{"ast":null,"code":"var _jsxFileName = \"D:\\\\LostAndFound\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// import React, { createContext, useState, useEffect } from 'react';\n// import { jwtDecode } from 'jwt-decode';\n// import { login, logout } from '../services/authService';\n\n// export const AuthContext = createContext();\n\n// export const AuthProvider = ({ children }) => {\n//   const [user, setUser] = useState(null);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     const token = localStorage.getItem('token');\n\n//     if (token) {\n//       try {\n//         const decoded = jwtDecode(token);\n//         const currentTime = Date.now() / 1000;\n\n//         if (decoded.exp < currentTime) {\n//           // Token expired\n//           handleLogout();\n//         } else {\n//           setUser(decoded);\n//         }\n//       } catch (error) {\n//         console.error('Invalid token', error);\n//         handleLogout();\n//       }\n//     }\n\n//     setLoading(false);\n//   }, []);\n\n//   const handleLogin = async (email, password) => {\n//     try {\n//       const data = await login(email, password);\n\n//       if (data.token) {\n//         localStorage.setItem('token', data.token);\n//         const decoded = jwtDecode(data.token);\n//         setUser(decoded);\n//         return { success: true };\n//       }\n//     } catch (error) {\n//       return { \n//         success: false, \n//         message: error.response?.data?.message || 'Login failed' \n//       };\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     logout();\n//     localStorage.removeItem('token');\n//     setUser(null);\n//   };\n\n//   return (\n//     <AuthContext.Provider \n//       value={{ \n//         user, \n//         loading, \n//         login: handleLogin, \n//         logout: handleLogout,\n//         isAuthenticated: !!user\n//       }}\n//     >\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\nimport { login, logout } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const handleLogout = useCallback(() => {\n    logout();\n    localStorage.removeItem('token');\n    sessionStorage.removeItem('token');\n    localStorage.removeItem('user');\n    sessionStorage.removeItem('user');\n    setUser(null);\n    navigate('/login');\n  }, [navigate]);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token') || sessionStorage.getItem('token');\n      const userData = localStorage.getItem('user') || sessionStorage.getItem('user');\n      if (token) {\n        try {\n          const decoded = jwtDecode(token);\n          const currentTime = Date.now() / 1000;\n          if (decoded.exp < currentTime) {\n            handleLogout();\n          } else {\n            setUser(userData ? JSON.parse(userData) : decoded);\n          }\n        } catch (error) {\n          console.error('Invalid token', error);\n          handleLogout();\n        }\n      }\n      setLoading(false);\n    };\n    initializeAuth();\n  }, [handleLogout]);\n  const handleLogin = async (credentials, rememberMe) => {\n    try {\n      const data = await login(credentials);\n      if (data.token) {\n        const storage = rememberMe ? localStorage : sessionStorage;\n        storage.setItem('token', data.token);\n        if (data.user) {\n          storage.setItem('user', JSON.stringify(data.user));\n        }\n        const decoded = jwtDecode(data.token);\n        setUser(data.user || decoded);\n        return {\n          success: true\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      isAuthenticated: !!user,\n      login: handleLogin,\n      logout: handleLogout,\n      setUser // Added for flexibility\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"b4t6CmT/PVrgnfkmPqdCGdxMmnw=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","jwtDecode","useNavigate","login","logout","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","navigate","handleLogout","localStorage","removeItem","sessionStorage","initializeAuth","token","getItem","userData","decoded","currentTime","Date","now","exp","JSON","parse","error","console","handleLogin","credentials","rememberMe","data","storage","setItem","stringify","success","_error$response","_error$response$data","message","response","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/LostAndFound/client/src/context/AuthContext.js"],"sourcesContent":["// import React, { createContext, useState, useEffect } from 'react';\r\n// import { jwtDecode } from 'jwt-decode';\r\n// import { login, logout } from '../services/authService';\r\n\r\n// export const AuthContext = createContext();\r\n\r\n// export const AuthProvider = ({ children }) => {\r\n//   const [user, setUser] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem('token');\r\n    \r\n//     if (token) {\r\n//       try {\r\n//         const decoded = jwtDecode(token);\r\n//         const currentTime = Date.now() / 1000;\r\n        \r\n//         if (decoded.exp < currentTime) {\r\n//           // Token expired\r\n//           handleLogout();\r\n//         } else {\r\n//           setUser(decoded);\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Invalid token', error);\r\n//         handleLogout();\r\n//       }\r\n//     }\r\n    \r\n//     setLoading(false);\r\n//   }, []);\r\n\r\n//   const handleLogin = async (email, password) => {\r\n//     try {\r\n//       const data = await login(email, password);\r\n      \r\n//       if (data.token) {\r\n//         localStorage.setItem('token', data.token);\r\n//         const decoded = jwtDecode(data.token);\r\n//         setUser(decoded);\r\n//         return { success: true };\r\n//       }\r\n//     } catch (error) {\r\n//       return { \r\n//         success: false, \r\n//         message: error.response?.data?.message || 'Login failed' \r\n//       };\r\n//     }\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     logout();\r\n//     localStorage.removeItem('token');\r\n//     setUser(null);\r\n//   };\r\n\r\n//   return (\r\n//     <AuthContext.Provider \r\n//       value={{ \r\n//         user, \r\n//         loading, \r\n//         login: handleLogin, \r\n//         logout: handleLogout,\r\n//         isAuthenticated: !!user\r\n//       }}\r\n//     >\r\n//       {children}\r\n//     </AuthContext.Provider>\r\n//   );\r\n// };\r\n\r\n\r\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { login, logout } from '../services/authService';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = useCallback(() => {\r\n    logout();\r\n    localStorage.removeItem('token');\r\n    sessionStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    sessionStorage.removeItem('user');\r\n    setUser(null);\r\n    navigate('/login');\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      const token = localStorage.getItem('token') || sessionStorage.getItem('token');\r\n      const userData = localStorage.getItem('user') || sessionStorage.getItem('user');\r\n      \r\n      if (token) {\r\n        try {\r\n          const decoded = jwtDecode(token);\r\n          const currentTime = Date.now() / 1000;\r\n          \r\n          if (decoded.exp < currentTime) {\r\n            handleLogout();\r\n          } else {\r\n            setUser(userData ? JSON.parse(userData) : decoded);\r\n          }\r\n        } catch (error) {\r\n          console.error('Invalid token', error);\r\n          handleLogout();\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    initializeAuth();\r\n  }, [handleLogout]);\r\n\r\n  const handleLogin = async (credentials, rememberMe) => {\r\n    try {\r\n      const data = await login(credentials);\r\n      \r\n      if (data.token) {\r\n        const storage = rememberMe ? localStorage : sessionStorage;\r\n        storage.setItem('token', data.token);\r\n        if (data.user) {\r\n          storage.setItem('user', JSON.stringify(data.user));\r\n        }\r\n        \r\n        const decoded = jwtDecode(data.token);\r\n        setUser(data.user || decoded);\r\n        return { success: true };\r\n      }\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || 'Login failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider \r\n      value={{ \r\n        user,\r\n        loading,\r\n        isAuthenticated: !!user,\r\n        login: handleLogin,\r\n        logout: handleLogout,\r\n        setUser // Added for flexibility\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}