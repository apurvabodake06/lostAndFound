{"ast":null,"code":"var _jsxFileName = \"D:\\\\LostAndFound\\\\client\\\\src\\\\components\\\\LoadingSpinner.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingSpinner = ({\n  size = 'medium',\n  color = 'blue'\n}) => {\n  let dimensions;\n  let borderWidth;\n\n  // Set size based on prop\n  switch (size) {\n    case 'small':\n      dimensions = 'h-6 w-6';\n      borderWidth = 'border-2';\n      break;\n    case 'large':\n      dimensions = 'h-12 w-12';\n      borderWidth = 'border-4';\n      break;\n    case 'medium':\n    default:\n      dimensions = 'h-8 w-8';\n      borderWidth = 'border-3';\n  }\n\n  // Set color based on prop\n  let borderColor;\n  switch (color) {\n    case 'red':\n      borderColor = 'border-red-500';\n      break;\n    case 'green':\n      borderColor = 'border-green-500';\n      break;\n    case 'yellow':\n      borderColor = 'border-yellow-500';\n      break;\n    case 'blue':\n    default:\n      borderColor = 'border-blue-500';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${dimensions} ${borderWidth} ${borderColor} border-t-transparent border-solid rounded-full animate-spin`,\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = LoadingSpinner;\nexport default LoadingSpinner;\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LoadingSpinner","size","color","dimensions","borderWidth","borderColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/LostAndFound/client/src/components/LoadingSpinner.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst LoadingSpinner = ({ size = 'medium', color = 'blue' }) => {\r\n  let dimensions;\r\n  let borderWidth;\r\n  \r\n  // Set size based on prop\r\n  switch (size) {\r\n    case 'small':\r\n      dimensions = 'h-6 w-6';\r\n      borderWidth = 'border-2';\r\n      break;\r\n    case 'large':\r\n      dimensions = 'h-12 w-12';\r\n      borderWidth = 'border-4';\r\n      break;\r\n    case 'medium':\r\n    default:\r\n      dimensions = 'h-8 w-8';\r\n      borderWidth = 'border-3';\r\n  }\r\n  \r\n  // Set color based on prop\r\n  let borderColor;\r\n  switch (color) {\r\n    case 'red':\r\n      borderColor = 'border-red-500';\r\n      break;\r\n    case 'green':\r\n      borderColor = 'border-green-500';\r\n      break;\r\n    case 'yellow':\r\n      borderColor = 'border-yellow-500';\r\n      break;\r\n    case 'blue':\r\n    default:\r\n      borderColor = 'border-blue-500';\r\n  }\r\n  \r\n  return (\r\n    <div className=\"flex justify-center items-center\">\r\n      <div className={`${dimensions} ${borderWidth} ${borderColor} border-t-transparent border-solid rounded-full animate-spin`}> </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,IAAI,GAAG,QAAQ;EAAEC,KAAK,GAAG;AAAO,CAAC,KAAK;EAC9D,IAAIC,UAAU;EACd,IAAIC,WAAW;;EAEf;EACA,QAAQH,IAAI;IACV,KAAK,OAAO;MACVE,UAAU,GAAG,SAAS;MACtBC,WAAW,GAAG,UAAU;MACxB;IACF,KAAK,OAAO;MACVD,UAAU,GAAG,WAAW;MACxBC,WAAW,GAAG,UAAU;MACxB;IACF,KAAK,QAAQ;IACb;MACED,UAAU,GAAG,SAAS;MACtBC,WAAW,GAAG,UAAU;EAC5B;;EAEA;EACA,IAAIC,WAAW;EACf,QAAQH,KAAK;IACX,KAAK,KAAK;MACRG,WAAW,GAAG,gBAAgB;MAC9B;IACF,KAAK,OAAO;MACVA,WAAW,GAAG,kBAAkB;MAChC;IACF,KAAK,QAAQ;MACXA,WAAW,GAAG,mBAAmB;MACjC;IACF,KAAK,MAAM;IACX;MACEA,WAAW,GAAG,iBAAiB;EACnC;EAEA,oBACEN,OAAA;IAAKO,SAAS,EAAC,kCAAkC;IAAAC,QAAA,eAC/CR,OAAA;MAAKO,SAAS,EAAE,GAAGH,UAAU,IAAIC,WAAW,IAAIC,WAAW,8DAA+D;MAAAE,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/H,CAAC;AAEV,CAAC;AAACC,EAAA,GA1CIZ,cAAc;AA4CpB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}