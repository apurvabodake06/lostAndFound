{"ast":null,"code":"import axios from 'axios';\nimport authService from './authService';\nconst API_URL = '/api/items';\n\n// Set auth token for every request\naxios.interceptors.request.use(config => {\n  const token = authService.getToken();\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Get all items\n// const getAllItems = async () => {\n//   try {\n//     const response = await axios.get(API_URL);\n//     return response.data;\n//   } catch (error) {\n//     throw error.response?.data || { message: 'Server error' };\n//   }\n// };\nconst getAllItems = async () => {\n  try {\n    console.log(\"Fetching items...\");\n    const response = await fetch('http://localhost:5000/api/v1/items');\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const data = await response.json();\n    console.log(\"Fetched items:\", data); // ✅ Debugging output\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching items:\", error.message);\n    throw error;\n  }\n};\n\n// Alias for getAllItems to match import in LostItems.js\nconst getItems = getAllItems;\n\n// Get items by category\nconst getItemsByCategory = async category => {\n  try {\n    const response = await axios.get(`${API_URL}/category/${category}`);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n      message: 'Server error'\n    };\n  }\n};\n\n// Get recent items (for homepage)\nconst getRecentItems = async (limit = 6) => {\n  try {\n    const response = await axios.get(`${API_URL}/recent?limit=${limit}`);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      message: 'Server error'\n    };\n  }\n};\n\n// Search items\nconst searchItems = async query => {\n  try {\n    const response = await axios.get(`${API_URL}/search?q=${query}`);\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n      message: 'Server error'\n    };\n  }\n};\n\n// Get item by ID\nconst getItemById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || {\n      message: 'Server error'\n    };\n  }\n};\n\n// Add new item (security guard only)\nconst addItem = async itemData => {\n  try {\n    // Create FormData for file upload\n    const formData = new FormData();\n\n    // Append item image\n    if (itemData.image) {\n      formData.append('image', itemData.image);\n    }\n\n    // Append other item data\n    formData.append('name', itemData.name);\n    formData.append('category', itemData.category);\n    formData.append('description', itemData.description);\n    formData.append('location', itemData.location);\n    formData.append('foundDate', itemData.foundDate);\n    const response = await axios.post(API_URL, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || {\n      message: 'Server error'\n    };\n  }\n};\n\n// Update item\nconst updateItem = async (id, itemData) => {\n  try {\n    const response = await axios.put(`${API_URL}/${id}`, itemData);\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || {\n      message: 'Server error'\n    };\n  }\n};\n\n// Update item status (claimed/delivered)\nconst updateItemStatus = async (id, status) => {\n  try {\n    const response = await axios.patch(`${API_URL}/${id}/status`, {\n      status\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response7;\n    throw ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || {\n      message: 'Server error'\n    };\n  }\n};\n\n// Mark item as claimed/delivered\nconst claimItem = async (id, claimData) => {\n  try {\n    const response = await axios.put(`${API_URL}/${id}/claim`, claimData);\n    return response.data;\n  } catch (error) {\n    var _error$response8;\n    throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || {\n      message: 'Server error'\n    };\n  }\n};\n\n// Delete item\nconst deleteItem = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    var _error$response9;\n    throw ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || {\n      message: 'Server error'\n    };\n  }\n};\n\n// Export individual functions for direct importing\nexport { getAllItems, getItems, getItemsByCategory, getRecentItems, searchItems, getItemById, addItem, updateItem, updateItemStatus, claimItem, deleteItem };\n\n// Default export for backward compatibility\nconst itemService = {\n  getAllItems,\n  getItems,\n  getItemsByCategory,\n  getRecentItems,\n  searchItems,\n  getItemById,\n  addItem,\n  updateItem,\n  updateItemStatus,\n  claimItem,\n  deleteItem\n};\nexport default itemService;","map":{"version":3,"names":["axios","authService","API_URL","interceptors","request","use","config","token","getToken","headers","error","Promise","reject","getAllItems","console","log","response","fetch","ok","Error","status","data","json","message","getItems","getItemsByCategory","category","get","_error$response","getRecentItems","limit","_error$response2","searchItems","query","_error$response3","getItemById","id","_error$response4","addItem","itemData","formData","FormData","image","append","name","description","location","foundDate","post","_error$response5","updateItem","put","_error$response6","updateItemStatus","patch","_error$response7","claimItem","claimData","_error$response8","deleteItem","delete","_error$response9","itemService"],"sources":["D:/LostAndFound/client/src/services/itemService.js"],"sourcesContent":["import axios from 'axios';\r\nimport authService from './authService';\r\n\r\nconst API_URL = '/api/items';\r\n\r\n// Set auth token for every request\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = authService.getToken();\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Get all items\r\n// const getAllItems = async () => {\r\n//   try {\r\n//     const response = await axios.get(API_URL);\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     throw error.response?.data || { message: 'Server error' };\r\n//   }\r\n// };\r\nconst getAllItems = async () => {\r\n  try {\r\n    console.log(\"Fetching items...\");\r\n    const response = await fetch('http://localhost:5000/api/v1/items');\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log(\"Fetched items:\", data); // ✅ Debugging output\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching items:\", error.message);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Alias for getAllItems to match import in LostItems.js\r\nconst getItems = getAllItems;\r\n\r\n// Get items by category\r\nconst getItemsByCategory = async (category) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/category/${category}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || { message: 'Server error' };\r\n  }\r\n};\r\n\r\n// Get recent items (for homepage)\r\nconst getRecentItems = async (limit = 6) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/recent?limit=${limit}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || { message: 'Server error' };\r\n  }\r\n};\r\n\r\n// Search items\r\nconst searchItems = async (query) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/search?q=${query}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || { message: 'Server error' };\r\n  }\r\n};\r\n\r\n// Get item by ID\r\nconst getItemById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || { message: 'Server error' };\r\n  }\r\n};\r\n\r\n// Add new item (security guard only)\r\nconst addItem = async (itemData) => {\r\n  try {\r\n    // Create FormData for file upload\r\n    const formData = new FormData();\r\n    \r\n    // Append item image\r\n    if (itemData.image) {\r\n      formData.append('image', itemData.image);\r\n    }\r\n    \r\n    // Append other item data\r\n    formData.append('name', itemData.name);\r\n    formData.append('category', itemData.category);\r\n    formData.append('description', itemData.description);\r\n    formData.append('location', itemData.location);\r\n    formData.append('foundDate', itemData.foundDate);\r\n    \r\n    const response = await axios.post(API_URL, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || { message: 'Server error' };\r\n  }\r\n};\r\n\r\n// Update item\r\nconst updateItem = async (id, itemData) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/${id}`, itemData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || { message: 'Server error' };\r\n  }\r\n};\r\n\r\n// Update item status (claimed/delivered)\r\nconst updateItemStatus = async (id, status) => {\r\n  try {\r\n    const response = await axios.patch(`${API_URL}/${id}/status`, { status });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || { message: 'Server error' };\r\n  }\r\n};\r\n\r\n// Mark item as claimed/delivered\r\nconst claimItem = async (id, claimData) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/${id}/claim`, claimData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || { message: 'Server error' };\r\n  }\r\n};\r\n\r\n// Delete item\r\nconst deleteItem = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || { message: 'Server error' };\r\n  }\r\n};\r\n\r\n// Export individual functions for direct importing\r\nexport {\r\n  getAllItems,\r\n  getItems,\r\n  getItemsByCategory,\r\n  getRecentItems,\r\n  searchItems,\r\n  getItemById,\r\n  addItem,\r\n  updateItem,\r\n  updateItemStatus,\r\n  claimItem,\r\n  deleteItem\r\n};\r\n\r\n// Default export for backward compatibility\r\nconst itemService = {\r\n  getAllItems,\r\n  getItems,\r\n  getItemsByCategory,\r\n  getRecentItems,\r\n  searchItems,\r\n  getItemById,\r\n  addItem,\r\n  updateItem,\r\n  updateItemStatus,\r\n  claimItem,\r\n  deleteItem\r\n};\r\n\r\nexport default itemService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}