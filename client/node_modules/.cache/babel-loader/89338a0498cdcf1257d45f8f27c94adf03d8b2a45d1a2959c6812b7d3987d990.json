{"ast":null,"code":"var _jsxFileName = \"D:\\\\LostAndFound\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { FaLock, FaUser, FaShieldAlt } from \"react-icons/fa\";\n\n// const Login = () => {\n//   const [credentials, setCredentials] = useState({\n//     username: \"\",\n//     password: \"\",\n//   });\n\n//   const [error, setError] = useState(\"\");\n//   const [success, setSuccess] = useState(\"\");\n\n//   const handleChange = (e) => {\n//     setCredentials({\n//       ...credentials,\n//       [e.target.name]: e.target.value,\n//     });\n//     setError(\"\"); // Clear error on input change\n//     setSuccess(\"\");\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     const { username, password } = credentials;\n\n//     // Validation checks\n//     if (!username || !password) {\n//       setError(\"Fields should not be empty\");\n//       return;\n//     }\n\n//     // Hardcoded authentication check\n//     if (username === \"pict_guard\" && password === \"secure@guard123\") {\n//       setSuccess(\"Login successful!\");\n//       setError(\"\"); // Clear any previous error\n//       setTimeout(() => {\n//         window.location.href = \"/GuardDashboard\"; // Redirect after success\n//       }, 1500);\n//     } else {\n//       setError(\"Invalid username or password\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n//       <div className=\"max-w-md w-full space-y-8 bg-white p-10 rounded-xl shadow-lg\">\n//         <div className=\"text-center\">\n//           <div className=\"flex justify-center\">\n//             <div className=\"bg-blue-100 rounded-full p-3\">\n//               <FaShieldAlt className=\"h-10 w-10 text-blue-600\" />\n//             </div>\n//           </div>\n//           <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">\n//             Security Login\n//           </h2>\n//           <p className=\"mt-2 text-sm text-gray-600\">\n//             Sign in to manage the Lost & Found items at PICT College\n//           </p>\n//         </div>\n\n//         {/* Display error messages */}\n//         {error && <p className=\"text-red-500 text-sm text-center\">{error}</p>}\n//         {success && (\n//           <p className=\"text-green-500 text-sm text-center\">{success}</p>\n//         )}\n\n//         <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n//           <div className=\"rounded-md shadow-sm space-y-4\">\n//             <div>\n//               <label htmlFor=\"username\" className=\"sr-only\">\n//                 Username\n//               </label>\n//               <div className=\"relative\">\n//                 <div className=\"absolute left-3 top-3 text-gray-400\">\n//                   <FaUser />\n//                 </div>\n//                 <input\n//                   id=\"username\"\n//                   name=\"username\"\n//                   type=\"text\"\n//                   value={credentials.username}\n//                   onChange={handleChange}\n//                   className=\"appearance-none rounded-lg relative block w-full px-10 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n//                   placeholder=\"Username\"\n//                 />\n//               </div>\n//             </div>\n\n//             <div>\n//               <label htmlFor=\"password\" className=\"sr-only\">\n//                 Password\n//               </label>\n//               <div className=\"relative\">\n//                 <div className=\"absolute left-3 top-3 text-gray-400\">\n//                   <FaLock />\n//                 </div>\n//                 <input\n//                   id=\"password\"\n//                   name=\"password\"\n//                   type=\"password\"\n//                   value={credentials.password}\n//                   onChange={handleChange}\n//                   className=\"appearance-none rounded-lg relative block w-full px-10 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n//                   placeholder=\"Password\"\n//                 />\n//               </div>\n//             </div>\n//           </div>\n\n//           <div>\n//             <button\n//               type=\"submit\"\n//               className=\"group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200\"\n//             >\n//               Sign in\n//             </button>\n//           </div>\n//         </form>\n\n//         <div className=\"text-center mt-4\">\n//           <p className=\"text-xs text-gray-500\">\n//             This login page is exclusively for authorized security personnel.\n//             <br />\n//             If you found an item, please submit it to the nearest security\n//             office.\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\nimport React, { useState, useContext } from \"react\";\nimport { FaLock, FaUser, FaShieldAlt } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n    setError(\"\");\n    setSuccess(\"\");\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      username,\n      password\n    } = credentials;\n    if (!username || !password) {\n      setError(\"Fields should not be empty\");\n      return;\n    }\n    try {\n      await login(username, password);\n      setSuccess(\"Login successful!\");\n      setError(\"\");\n      setTimeout(() => {\n        navigate(\"/GuardDashboard\");\n      }, 1500);\n    } catch (err) {\n      setError(\"Invalid username or password\");\n      setSuccess(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md w-full space-y-8 bg-white p-10 rounded-xl shadow-lg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"E0juTxTgCoy5FAEIa50fXxYahfU=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","FaLock","FaUser","FaShieldAlt","useNavigate","AuthContext","jsxDEV","_jsxDEV","Login","_s","credentials","setCredentials","username","password","error","setError","success","setSuccess","login","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","setTimeout","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/LostAndFound/client/src/pages/Login.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { FaLock, FaUser, FaShieldAlt } from \"react-icons/fa\";\r\n\r\n// const Login = () => {\r\n//   const [credentials, setCredentials] = useState({\r\n//     username: \"\",\r\n//     password: \"\",\r\n//   });\r\n\r\n//   const [error, setError] = useState(\"\");\r\n//   const [success, setSuccess] = useState(\"\");\r\n\r\n//   const handleChange = (e) => {\r\n//     setCredentials({\r\n//       ...credentials,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//     setError(\"\"); // Clear error on input change\r\n//     setSuccess(\"\");\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const { username, password } = credentials;\r\n\r\n//     // Validation checks\r\n//     if (!username || !password) {\r\n//       setError(\"Fields should not be empty\");\r\n//       return;\r\n//     }\r\n\r\n//     // Hardcoded authentication check\r\n//     if (username === \"pict_guard\" && password === \"secure@guard123\") {\r\n//       setSuccess(\"Login successful!\");\r\n//       setError(\"\"); // Clear any previous error\r\n//       setTimeout(() => {\r\n//         window.location.href = \"/GuardDashboard\"; // Redirect after success\r\n//       }, 1500);\r\n//     } else {\r\n//       setError(\"Invalid username or password\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n//       <div className=\"max-w-md w-full space-y-8 bg-white p-10 rounded-xl shadow-lg\">\r\n//         <div className=\"text-center\">\r\n//           <div className=\"flex justify-center\">\r\n//             <div className=\"bg-blue-100 rounded-full p-3\">\r\n//               <FaShieldAlt className=\"h-10 w-10 text-blue-600\" />\r\n//             </div>\r\n//           </div>\r\n//           <h2 className=\"mt-6 text-3xl font-extrabold text-gray-900\">\r\n//             Security Login\r\n//           </h2>\r\n//           <p className=\"mt-2 text-sm text-gray-600\">\r\n//             Sign in to manage the Lost & Found items at PICT College\r\n//           </p>\r\n//         </div>\r\n\r\n//         {/* Display error messages */}\r\n//         {error && <p className=\"text-red-500 text-sm text-center\">{error}</p>}\r\n//         {success && (\r\n//           <p className=\"text-green-500 text-sm text-center\">{success}</p>\r\n//         )}\r\n\r\n//         <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\r\n//           <div className=\"rounded-md shadow-sm space-y-4\">\r\n//             <div>\r\n//               <label htmlFor=\"username\" className=\"sr-only\">\r\n//                 Username\r\n//               </label>\r\n//               <div className=\"relative\">\r\n//                 <div className=\"absolute left-3 top-3 text-gray-400\">\r\n//                   <FaUser />\r\n//                 </div>\r\n//                 <input\r\n//                   id=\"username\"\r\n//                   name=\"username\"\r\n//                   type=\"text\"\r\n//                   value={credentials.username}\r\n//                   onChange={handleChange}\r\n//                   className=\"appearance-none rounded-lg relative block w-full px-10 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n//                   placeholder=\"Username\"\r\n//                 />\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div>\r\n//               <label htmlFor=\"password\" className=\"sr-only\">\r\n//                 Password\r\n//               </label>\r\n//               <div className=\"relative\">\r\n//                 <div className=\"absolute left-3 top-3 text-gray-400\">\r\n//                   <FaLock />\r\n//                 </div>\r\n//                 <input\r\n//                   id=\"password\"\r\n//                   name=\"password\"\r\n//                   type=\"password\"\r\n//                   value={credentials.password}\r\n//                   onChange={handleChange}\r\n//                   className=\"appearance-none rounded-lg relative block w-full px-10 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\r\n//                   placeholder=\"Password\"\r\n//                 />\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div>\r\n//             <button\r\n//               type=\"submit\"\r\n//               className=\"group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200\"\r\n//             >\r\n//               Sign in\r\n//             </button>\r\n//           </div>\r\n//         </form>\r\n\r\n//         <div className=\"text-center mt-4\">\r\n//           <p className=\"text-xs text-gray-500\">\r\n//             This login page is exclusively for authorized security personnel.\r\n//             <br />\r\n//             If you found an item, please submit it to the nearest security\r\n//             office.\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\r\nimport React, { useState, useContext } from \"react\";\r\nimport { FaLock, FaUser, FaShieldAlt } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst Login = () => {\r\n  const [credentials, setCredentials] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const { login } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setCredentials({\r\n      ...credentials,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { username, password } = credentials;\r\n\r\n    if (!username || !password) {\r\n      setError(\"Fields should not be empty\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await login(username, password);\r\n      setSuccess(\"Login successful!\");\r\n      setError(\"\");\r\n      setTimeout(() => {\r\n        navigate(\"/GuardDashboard\");\r\n      }, 1500);\r\n    } catch (err) {\r\n      setError(\"Invalid username or password\");\r\n      setSuccess(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8 bg-white p-10 rounded-xl shadow-lg\">\r\n        {/* ... rest of your JSX remains the same ... */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}