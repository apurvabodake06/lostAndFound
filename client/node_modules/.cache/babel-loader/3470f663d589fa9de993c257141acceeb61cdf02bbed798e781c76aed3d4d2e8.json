{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/auth';\n\n// Register a new user (security guard)\nconst register = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}/register`, userData);\n    if (response.data && response.data.token) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n      message: 'Server error'\n    };\n  }\n};\n\n// Login user (security guard)\nconst login = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      email,\n      password\n    });\n    if (response.data && response.data.token) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      message: 'Server error'\n    };\n  }\n};\n\n// Logout user\nconst logout = () => {\n  localStorage.removeItem('user');\n};\n\n// Get current user from local storage\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem('user'));\n};\n\n// Get auth token\nconst getToken = () => {\n  const user = getCurrentUser();\n  return user ? user.token : null;\n};\n\n// Set auth token in axios headers\nconst setAuthHeader = () => {\n  const token = getToken();\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\nconst authService = {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n  getToken,\n  setAuthHeader\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","register","userData","response","post","data","token","localStorage","setItem","JSON","stringify","error","_error$response","message","login","email","password","_error$response2","logout","removeItem","getCurrentUser","parse","getItem","getToken","user","setAuthHeader","defaults","headers","common","authService"],"sources":["C:/Users/HP/OneDrive/Desktop/lostnfound/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = '/api/auth';\r\n\r\n// Register a new user (security guard)\r\nconst register = async (userData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/register`, userData);\r\n    \r\n    if (response.data && response.data.token) {\r\n      localStorage.setItem('user', JSON.stringify(response.data));\r\n    }\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || { message: 'Server error' };\r\n  }\r\n};\r\n\r\n// Login user (security guard)\r\nconst login = async (email, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/login`, { email, password });\r\n    \r\n    if (response.data && response.data.token) {\r\n      localStorage.setItem('user', JSON.stringify(response.data));\r\n    }\r\n    \r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data || { message: 'Server error' };\r\n  }\r\n};\r\n\r\n// Logout user\r\nconst logout = () => {\r\n  localStorage.removeItem('user');\r\n};\r\n\r\n// Get current user from local storage\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem('user'));\r\n};\r\n\r\n// Get auth token\r\nconst getToken = () => {\r\n  const user = getCurrentUser();\r\n  return user ? user.token : null;\r\n};\r\n\r\n// Set auth token in axios headers\r\nconst setAuthHeader = () => {\r\n  const token = getToken();\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\nconst authService = {\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  getToken,\r\n  setAuthHeader\r\n};\r\n\r\nexport default authService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,WAAW;;AAE3B;AACA,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACnC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,WAAW,EAAEE,QAAQ,CAAC;IAElE,IAAIC,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;MACxCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC7D;IAEA,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACR,QAAQ,cAAAS,eAAA,uBAAdA,eAAA,CAAgBP,IAAI,KAAI;MAAEQ,OAAO,EAAE;IAAe,CAAC;EAC3D;AACF,CAAC;;AAED;AACA,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EACvC,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,OAAO,QAAQ,EAAE;MAAEe,KAAK;MAAEC;IAAS,CAAC,CAAC;IAE1E,IAAIb,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;MACxCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC7D;IAEA,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;IAAA,IAAAM,gBAAA;IACd,MAAM,EAAAA,gBAAA,GAAAN,KAAK,CAACR,QAAQ,cAAAc,gBAAA,uBAAdA,gBAAA,CAAgBZ,IAAI,KAAI;MAAEQ,OAAO,EAAE;IAAe,CAAC;EAC3D;AACF,CAAC;;AAED;AACA,MAAMK,MAAM,GAAGA,CAAA,KAAM;EACnBX,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;;AAED;AACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,OAAOX,IAAI,CAACY,KAAK,CAACd,YAAY,CAACe,OAAO,CAAC,MAAM,CAAC,CAAC;AACjD,CAAC;;AAED;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAMC,IAAI,GAAGJ,cAAc,CAAC,CAAC;EAC7B,OAAOI,IAAI,GAAGA,IAAI,CAAClB,KAAK,GAAG,IAAI;AACjC,CAAC;;AAED;AACA,MAAMmB,aAAa,GAAGA,CAAA,KAAM;EAC1B,MAAMnB,KAAK,GAAGiB,QAAQ,CAAC,CAAC;EACxB,IAAIjB,KAAK,EAAE;IACTP,KAAK,CAAC2B,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUtB,KAAK,EAAE;EACpE,CAAC,MAAM;IACL,OAAOP,KAAK,CAAC2B,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACvD;AACF,CAAC;AAED,MAAMC,WAAW,GAAG;EAClB5B,QAAQ;EACRa,KAAK;EACLI,MAAM;EACNE,cAAc;EACdG,QAAQ;EACRE;AACF,CAAC;AAED,eAAeI,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}